// <auto-generated />
using System;
using HouseSpotter.Server.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HouseSpotter.Server.Migrations
{
    [DbContext(typeof(HousingContext))]
    [Migration("20240410131901_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HouseSpotter.Server.Models.Housing", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AnketosKodas")
                        .HasColumnType("longtext");

                    b.Property<string>("Aprasymas")
                        .HasColumnType("longtext");

                    b.Property<string>("Apsauga")
                        .HasColumnType("longtext");

                    b.Property<string>("ArtimiausiasTelkinys")
                        .HasColumnType("longtext");

                    b.Property<int?>("Aukstas")
                        .HasColumnType("int");

                    b.Property<int?>("AukstuSk")
                        .HasColumnType("int");

                    b.Property<string>("BustoTipas")
                        .HasColumnType("longtext");

                    b.Property<string>("ButoNumeris")
                        .HasColumnType("longtext");

                    b.Property<string>("Gatve")
                        .HasColumnType("longtext");

                    b.Property<string>("Gyvenviete")
                        .HasColumnType("longtext");

                    b.Property<int?>("IkiTelkinio")
                        .HasColumnType("int");

                    b.Property<string>("Irengimas")
                        .HasColumnType("longtext");

                    b.Property<double?>("Kaina")
                        .HasColumnType("double");

                    b.Property<double?>("KainaMen")
                        .HasColumnType("double");

                    b.Property<int?>("KambariuSk")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<int?>("Metai")
                        .HasColumnType("int");

                    b.Property<string>("NamoNumeris")
                        .HasColumnType("longtext");

                    b.Property<string>("NamoTipas")
                        .HasColumnType("longtext");

                    b.Property<string>("Nuotrauka")
                        .HasColumnType("longtext");

                    b.Property<string>("PapildomaIranga")
                        .HasColumnType("longtext");

                    b.Property<string>("PapildomosPatalpos")
                        .HasColumnType("longtext");

                    b.Property<string>("PastatoEnergijosSuvartojimoKlase")
                        .HasColumnType("longtext");

                    b.Property<string>("PastatoTipas")
                        .HasColumnType("longtext");

                    b.Property<double?>("Plotas")
                        .HasColumnType("double");

                    b.Property<string>("RCNumeris")
                        .HasColumnType("longtext");

                    b.Property<string>("Sildymas")
                        .HasColumnType("longtext");

                    b.Property<string>("SklypoPlotas")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<string>("Vanduo")
                        .HasColumnType("longtext");

                    b.Property<string>("Ypatybes")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Housing", (string)null);
                });

            modelBuilder.Entity("HouseSpotter.Server.Models.SavedSearch", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HousingID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("SavedSearch");
                });

            modelBuilder.Entity("HouseSpotter.Server.Models.Scrape", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateScraped")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<int?>("NewQueries")
                        .HasColumnType("int");

                    b.Property<int>("ScrapeStatus")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("ScrapeTime")
                        .HasColumnType("time(6)");

                    b.Property<int>("ScrapeType")
                        .HasColumnType("int");

                    b.Property<int>("ScrapedSite")
                        .HasColumnType("int");

                    b.Property<int?>("TotalErrors")
                        .HasColumnType("int");

                    b.Property<int?>("TotalQueries")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Scrape", (string)null);
                });

            modelBuilder.Entity("HouseSpotter.Server.Models.ScrapeError", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<int?>("ScrapeID")
                        .HasColumnType("int");

                    b.Property<string>("StackTrace")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ScrapeID");

                    b.ToTable("ScrapeError");
                });

            modelBuilder.Entity("HouseSpotter.Server.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("HouseSpotter.Server.Models.SavedSearch", b =>
                {
                    b.HasOne("HouseSpotter.Server.Models.User", null)
                        .WithMany("SavedSearches")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("HouseSpotter.Server.Models.ScrapeError", b =>
                {
                    b.HasOne("HouseSpotter.Server.Models.Scrape", null)
                        .WithMany("Errors")
                        .HasForeignKey("ScrapeID");
                });

            modelBuilder.Entity("HouseSpotter.Server.Models.Scrape", b =>
                {
                    b.Navigation("Errors");
                });

            modelBuilder.Entity("HouseSpotter.Server.Models.User", b =>
                {
                    b.Navigation("SavedSearches");
                });
#pragma warning restore 612, 618
        }
    }
}
